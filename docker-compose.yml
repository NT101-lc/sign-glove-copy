version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: signglove-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: signglove123
      MONGO_INITDB_DATABASE: signglove
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - signnet
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: signglove-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://admin:signglove123@mongodb:27017/signglove?authSource=admin
      - DB_NAME=signglove
      - ESP32_IP=192.168.1.100
      - TTS_ENABLED=true
      - TTS_PROVIDER=gtts
      - CORS_ORIGINS=["http://localhost:3000","http://localhost:5173","http://frontend:80"]
    volumes:
      - ./backend:/app
      - backend_data:/app/data
      - backend_models:/app/models
      - backend_cache:/app/tts_cache
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - signnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: signglove-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - signnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: signglove-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - signnet

volumes:
  mongodb_data:
    driver: local
  backend_data:
    driver: local
  backend_models:
    driver: local
  backend_cache:
    driver: local
  # redis_data:
  #   driver: local

networks:
  signnet:
    driver: bridge
